{"version":3,"sources":["components/Return/Return.js","components/Send/Send.js","App.js","reportWebVitals.js","index.js"],"names":["Return","React","useState","connection","setConnection","useEffect","window","electron","ipcRenderer","on","payload","id","state","return_address","send_address","onClick","send","Send","setId","onChange","e","target","value","App","className","to","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAsCeA,EApCA,WACX,MAAoCC,IAAMC,WAA1C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OANAH,IAAMI,WAAU,WACZC,OAAOC,SAASC,YAAYC,GAAG,UAAU,SAACC,GACtCN,EAAcM,QAEnB,IAGC,8BACKP,EACG,uCACSA,EAAWQ,GAAG,uBADvB,UAEYR,EAAWS,MAAM,uBAF7B,UAGYT,EAAWU,eAAe,uBAHtC,WAIaV,EAAWW,aAAa,uBACX,YAArBX,EAAWS,OACR,wBAAQG,QAnBhB,WACRT,OAAOC,SAASC,YAAYQ,KAAK,SAAU,MAAOb,EAAWQ,KAkB7C,oBAIR,wBAAQI,QA3BJ,WACZT,OAAOC,SAASC,YAAYQ,KAAK,SAAU,WA0BnC,wBCUDC,EAxCF,WACT,MAAoChB,IAAMC,WAA1C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoBH,IAAMC,SAAS,IAAnC,mBAAOS,EAAP,KAAWO,EAAX,KAgBA,OANAjB,IAAMI,WAAU,WACZC,OAAOC,SAASC,YAAYC,GAAG,QAAQ,SAACC,GACpCN,EAAcM,QAEnB,IAGC,8BACKP,EACG,uCACSA,EAAWQ,GAAG,uBADvB,UAEYR,EAAWS,MAAM,uBAF7B,UAGYT,EAAWW,aAAa,uBAHpC,WAIaX,EAAWU,eAAe,uBACb,aAArBV,EAAWS,OACR,wBAAQG,QAnBb,WACXT,OAAOC,SAASC,YAAYQ,KAAK,OAAQ,SAAUb,IAkBnC,uBAIR,qCACI,uBAAOgB,SAAU,SAAAC,GAAC,OAAIF,EAAME,EAAEC,OAAOC,QAAQA,MAAOX,IACpD,wBAAQI,QA7BR,WACZT,OAAOC,SAASC,YAAYQ,KAAK,OAAQ,MAAOL,IA4BpC,2B,MCJLY,MAlBf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,eAAC,IAAD,WACE,sBAAKA,UAAU,WAAf,UACE,cAAC,IAAD,CAAMC,GAAG,UAAT,oBACA,cAAC,IAAD,CAAMA,GAAG,QAAT,qBAEF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAArB,kBACA,cAAC,IAAD,CAAOD,KAAK,UAAUE,UAAW5B,IACjC,cAAC,IAAD,CAAO0B,KAAK,QAAQE,UAAWX,aCZ1BY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c5a8268d.chunk.js","sourcesContent":["import React from 'react';\n\nconst Return = () => {\n    const [connection, setConnection] = React.useState();\n\n    const connect = () => {\n        window.electron.ipcRenderer.send('return', 'listen');\n    };\n\n    const ack = () => {\n        window.electron.ipcRenderer.send('return', 'ack', connection.id);\n    }\n\n    React.useEffect(() => {\n        window.electron.ipcRenderer.on('return', (payload) => {\n            setConnection(payload);\n        });\n    }, []);\n\n    return (\n        <div>\n            {connection ? (\n                <div>\n                    ID: {connection.id}<br/>\n                    State: {connection.state}<br/>\n                    Local: {connection.return_address}<br/>\n                    Remote: {connection.send_address}<br/>\n                    {connection.state === 'SynSent' && (\n                        <button onClick={ack}>Ack</button>\n                    )}\n                </div>\n            ) : (\n                <button onClick={connect}>Connect</button>\n            )}\n        </div>\n    )\n};\n\nexport default Return;","import React from 'react';\n\nconst Send = () => {\n    const [connection, setConnection] = React.useState();\n    const [id, setId] = React.useState('');\n\n    const connect = () => {\n        window.electron.ipcRenderer.send('send', 'syn', id);\n    };\n\n    const stream = () => {\n        window.electron.ipcRenderer.send('send', 'stream', connection);\n    }\n\n    React.useEffect(() => {\n        window.electron.ipcRenderer.on('send', (payload) => {\n            setConnection(payload);\n        });\n    },Â []);\n\n    return (\n        <div>\n            {connection ? (\n                <div>\n                    ID: {connection.id}<br/>\n                    State: {connection.state}<br/>\n                    Local: {connection.send_address}<br/>\n                    Remote: {connection.return_address}<br/>\n                    {connection.state === 'SynAcked' && (\n                        <button onClick={stream}>Stream</button>\n                    )}\n                </div>\n            ): (\n                <>\n                    <input onChange={e => setId(e.target.value)} value={id}/>\n                    <button onClick={connect}>Connect</button>\n                </>\n            )}\n        </div>\n    )\n};\n\nexport default Send;","import React from 'react';\nimport {\n  MemoryRouter as Router,\n  Link,\n  Switch,\n  Route\n} from 'react-router-dom';\n\nimport Return from './components/Return';\nimport Send from './components/Send';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Router>\n        <div className=\"app-menu\">\n          <Link to=\"/return\">Return</Link>\n          <Link to=\"/send\">Send</Link>\n        </div>\n        <Switch>\n          <Route path=\"/\" exact>Home</Route>\n          <Route path=\"/return\" component={Return} />\n          <Route path=\"/send\" component={Send} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}